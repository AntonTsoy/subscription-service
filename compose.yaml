networks:
  backend:

services:
  db:
    image: postgres:17.0-alpine
    container_name: postgres_db
    env_file: .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  migrate:
    image: migrate/migrate
    container_name: migrate_db
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSL}",
      "up"
    ]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

  app:
    build: .
    container_name: sub_service
    env_file: .env
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    restart: always

volumes:
  pgdata:
